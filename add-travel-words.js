import sqlite3 from 'sqlite3';
import { open } from 'sqlite';

const travelWords = [
  { russian: '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', english: 'journey', pronunciation: '[Ààd í…úÀêrni]', example: 'The journey was amazing.', difficulty: 2 },
  { russian: '–±–∞–≥–∞–∂', english: 'luggage', pronunciation: '[Ààl å…°…™d í]', example: 'Pack your luggage carefully.', difficulty: 2 },
  { russian: '—á–µ–º–æ–¥–∞–Ω', english: 'suitcase', pronunciation: '[ÀàsuÀêtke…™s]', example: 'The suitcase is heavy.', difficulty: 1 },
  { russian: '—Ä—é–∫–∑–∞–∫', english: 'backpack', pronunciation: '[Ààb√¶kp√¶k]', example: 'I carry a backpack when hiking.', difficulty: 1 },
  { russian: '–±–∏–ª–µ—Ç', english: 'ticket', pronunciation: '[Ààt…™k…™t]', example: 'Buy your ticket online.', difficulty: 1 },
  { russian: '–≤–∏–∑–∞', english: 'visa', pronunciation: '[ÀàviÀêz…ô]', example: 'You need a visa to enter.', difficulty: 2 },
  { russian: '–≥—Ä–∞–Ω–∏—Ü–∞', english: 'border', pronunciation: '[Ààb…îÀêrd…ôr]', example: 'Cross the border safely.', difficulty: 2 },
  { russian: '—Ç–∞–º–æ–∂–Ω—è', english: 'customs', pronunciation: '[Ààk åst…ômz]', example: 'Declare items at customs.', difficulty: 3 },
  { russian: '–∞—ç—Ä–æ–ø–æ—Ä—Ç', english: 'airport', pronunciation: '[Ààerp…îÀêrt]', example: 'The airport is busy today.', difficulty: 1 },
  { russian: '–≤–æ–∫–∑–∞–ª', english: 'station', pronunciation: '[Ààste…™ É…ôn]', example: 'Meet me at the station.', difficulty: 1 },
  { russian: '–∞–≤—Ç–æ–≤–æ–∫–∑–∞–ª', english: 'bus station', pronunciation: '[b ås Ààste…™ É…ôn]', example: 'The bus station is crowded.', difficulty: 2 },
  { russian: '–ø–æ—Ä—Ç', english: 'port', pronunciation: '[p…îÀêrt]', example: 'Ships arrive at the port.', difficulty: 2 },
  { russian: '–ø—Ä–∏—Å—Ç–∞–Ω—å', english: 'pier', pronunciation: '[p…™r]', example: 'Walk along the pier.', difficulty: 2 },
  { russian: '–ø—Ä–∏—á–∞–ª', english: 'dock', pronunciation: '[d…ëÀêk]', example: 'The boat is at the dock.', difficulty: 2 },
  { russian: '—Ç–µ—Ä–º–∏–Ω–∞–ª', english: 'terminal', pronunciation: '[Ààt…úÀêrm…™n…ôl]', example: 'Find gate 5 in terminal B.', difficulty: 2 },
  { russian: '–≤—ã—Ö–æ–¥', english: 'gate', pronunciation: '[…°e…™t]', example: 'Boarding at gate 12.', difficulty: 1 },
  { russian: '–ø–æ—Å–∞–¥–∫–∞', english: 'boarding', pronunciation: '[Ààb…îÀêrd…™≈ã]', example: 'Boarding starts at 3 PM.', difficulty: 2 },
  { russian: '–≤–∑–ª–µ—Ç', english: 'takeoff', pronunciation: '[Ààte…™k…îÀêf]', example: 'The takeoff was smooth.', difficulty: 2 },
  { russian: '–ø–æ—Å–∞–¥–∫–∞', english: 'landing', pronunciation: '[Ààl√¶nd…™≈ã]', example: 'The landing was perfect.', difficulty: 2 },
  { russian: '—Ä–µ–π—Å', english: 'flight', pronunciation: '[fla…™t]', example: 'My flight is delayed.', difficulty: 1 },
  { russian: '–º–∞—Ä—à—Ä—É—Ç', english: 'route', pronunciation: '[ruÀêt]', example: 'Plan your route carefully.', difficulty: 2 },
  { russian: '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', english: 'schedule', pronunciation: '[Ààsked íuÀêl]', example: 'Check the train schedule.', difficulty: 2 },
  { russian: '–∑–∞–¥–µ—Ä–∂–∫–∞', english: 'delay', pronunciation: '[d…™Ààle…™]', example: 'There is a 30-minute delay.', difficulty: 2 },
  { russian: '–æ—Ç–º–µ–Ω–∞', english: 'cancellation', pronunciation: '[Àåk√¶ns…ôÀàle…™ É…ôn]', example: 'Flight cancellation is announced.', difficulty: 3 },
  { russian: '–ø–µ—Ä–µ—Å–∞–¥–∫–∞', english: 'transfer', pronunciation: '[Ààtr√¶nsf…ôr]', example: 'You have a transfer in Paris.', difficulty: 2 },
  { russian: '–ø—Ä—è–º–æ–π', english: 'direct', pronunciation: '[d…™Ààrekt]', example: 'Take a direct flight.', difficulty: 1 },
  { russian: '—Ç—É–¥–∞-–æ–±—Ä–∞—Ç–Ω–æ', english: 'round trip', pronunciation: '[ra änd tr…™p]', example: 'Buy a round trip ticket.', difficulty: 2 },
  { russian: '–≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É', english: 'one way', pronunciation: '[w ån we…™]', example: 'I need a one way ticket.', difficulty: 2 },
  { russian: '–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', english: 'booking', pronunciation: '[Ààb äk…™≈ã]', example: 'Confirm your booking online.', difficulty: 2 },
  { russian: '—Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è', english: 'reservation', pronunciation: '[Àårez…ôrÀàve…™ É…ôn]', example: 'Make a hotel reservation.', difficulty: 3 },
  { russian: '–æ—Ç–µ–ª—å', english: 'hotel', pronunciation: '[ho äÀàtel]', example: 'The hotel is luxurious.', difficulty: 1 },
  { russian: '–º–æ—Ç–µ–ª—å', english: 'motel', pronunciation: '[mo äÀàtel]', example: 'Stay at a roadside motel.', difficulty: 2 },
  { russian: '—Ö–æ—Å—Ç–µ–ª', english: 'hostel', pronunciation: '[Ààh…ëÀêst…ôl]', example: 'Hostels are budget-friendly.', difficulty: 2 },
  { russian: '–≥–æ—Å—Ç–∏–Ω–∏—Ü–∞', english: 'inn', pronunciation: '[…™n]', example: 'The country inn is cozy.', difficulty: 2 },
  { russian: '–ø–∞–Ω—Å–∏–æ–Ω', english: 'guesthouse', pronunciation: '[Àà…°estha äs]', example: 'Stay at a family guesthouse.', difficulty: 2 },
  { russian: '–∫—É—Ä–æ—Ä—Ç', english: 'resort', pronunciation: '[r…™Ààz…îÀêrt]', example: 'The beach resort is beautiful.', difficulty: 2 },
  { russian: '–∫–µ–º–ø–∏–Ω–≥', english: 'campsite', pronunciation: '[Ààk√¶mpsa…™t]', example: 'Set up camp at the campsite.', difficulty: 2 },
  { russian: '–ø–∞–ª–∞—Ç–∫–∞', english: 'tent', pronunciation: '[tent]', example: 'Sleep in a tent under stars.', difficulty: 1 },
  { russian: '—Å–ø–∞–ª—å–Ω—ã–π –º–µ—à–æ–∫', english: 'sleeping bag', pronunciation: '[ÀàsliÀêp…™≈ã b√¶…°]', example: 'Bring a warm sleeping bag.', difficulty: 2 },
  { russian: '–∫–æ—Å—Ç–µ—Ä', english: 'campfire', pronunciation: '[Ààk√¶mpfa…™…ôr]', example: 'Gather around the campfire.', difficulty: 2 },
  { russian: '–ø–æ—Ö–æ–¥', english: 'hike', pronunciation: '[ha…™k]', example: 'Go for a mountain hike.', difficulty: 1 },
  { russian: '—Ç—Ä–æ–ø–∞', english: 'trail', pronunciation: '[tre…™l]', example: 'Follow the hiking trail.', difficulty: 2 },
  { russian: '–∫–æ–º–ø–∞—Å', english: 'compass', pronunciation: '[Ààk åmp…ôs]', example: 'Use a compass for navigation.', difficulty: 2 },
  { russian: '–∫–∞—Ä—Ç–∞', english: 'map', pronunciation: '[m√¶p]', example: 'Study the map carefully.', difficulty: 1 },
  { russian: 'GPS', english: 'GPS', pronunciation: '[Àåd íiÀê piÀê Ààes]', example: 'GPS helps with navigation.', difficulty: 2 },
  { russian: '–ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å', english: 'guidebook', pronunciation: '[Àà…°a…™db äk]', example: 'Buy a travel guidebook.', difficulty: 2 },
  { russian: '—ç–∫—Å–∫—É—Ä—Å–∏—è', english: 'tour', pronunciation: '[t är]', example: 'Join a city tour.', difficulty: 1 },
  { russian: '–≥–∏–¥', english: 'guide', pronunciation: '[…°a…™d]', example: 'The guide knows the area well.', difficulty: 1 },
  { russian: '—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π', english: 'tourist', pronunciation: '[Ààt är…™st]', example: 'Visit the tourist attractions.', difficulty: 2 },
  { russian: '–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', english: 'attraction', pronunciation: '[…ôÀàtr√¶k É…ôn]', example: 'This is a popular attraction.', difficulty: 3 }
];

async function addTravelWords() {
  console.log('üöÇ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ 50 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ç–µ–º—ã travel...\n');

  try {
    const db = await open({
      filename: './engcard.db',
      driver: sqlite3.Database
    });

    let added = 0;
    
    for (const word of travelWords) {
      const wordId = `travel-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
      
      try {
        await db.run(`
          INSERT INTO words (id, russian, english, topic_id, difficulty_level, pronunciation, example_sentence, usage_frequency)
          VALUES (?, ?, ?, ?, ?, ?, ?, ?)
        `, [
          wordId,
          word.russian,
          word.english,
          'travel',
          word.difficulty,
          word.pronunciation,
          word.example,
          Math.floor(Math.random() * 100) + 1
        ]);
        
        added++;
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ª–æ–≤–∞ "${word.russian}":`, error.message);
      }
    }
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${added} —Å–ª–æ–≤ –¥–ª—è —Ç–µ–º—ã travel`);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Å–ª–æ–≤
    await db.run(`
      UPDATE topics SET words_count = (
        SELECT COUNT(*) FROM words WHERE topic_id = topics.id
      )
    `);

    await db.close();
    console.log('üéâ –ì–æ—Ç–æ–≤–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

addTravelWords();
