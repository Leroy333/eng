// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
import fetch from 'node-fetch';

const API_BASE = 'http://localhost:3001';

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API EngCard...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${API_BASE}/health`);
    const healthData = await healthResponse.json();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthData.status);
    console.log('');

    // –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º
    console.log('2. –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º...');
    const topicsResponse = await fetch(`${API_BASE}/api/topics`);
    const topics = await topicsResponse.json();
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–µ–º: ${topics.length}`);
    topics.forEach(topic => {
      console.log(`   - ${topic.name} (${topic.words_count || 0} —Å–ª–æ–≤)`);
    });
    console.log('');

    // –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å–ª–æ–≤
    console.log('3. –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å–ª–æ–≤...');
    const wordsResponse = await fetch(`${API_BASE}/api/words`);
    const words = await wordsResponse.json();
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–ª–æ–≤: ${words.length}`);
    console.log('');

    // –¢–µ—Å—Ç 4: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤ –ø–æ —Ç–µ–º–µ
    if (topics.length > 0) {
      const firstTopic = topics[0];
      console.log(`4. –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤ –ø–æ —Ç–µ–º–µ "${firstTopic.name}"...`);
      const topicWordsResponse = await fetch(`${API_BASE}/api/words/topic/${firstTopic.id}`);
      const topicWords = await topicWordsResponse.json();
      console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–ª–æ–≤ –¥–ª—è —Ç–µ–º—ã "${firstTopic.name}": ${topicWords.length}`);
      topicWords.slice(0, 3).forEach(word => {
        console.log(`   - ${word.russian} ‚Üí ${word.english}`);
      });
      console.log('');
    }

    // –¢–µ—Å—Ç 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('5. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const userResponse = await fetch(`${API_BASE}/api/users`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        telegramId: 999888777,
        username: 'test_user',
        firstName: '–¢–µ—Å—Ç',
        lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
      })
    });
    const user = await userResponse.json();
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${user.first_name} ${user.last_name} (ID: ${user.id})`);
    console.log('');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);
    console.log('');
    console.log('üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npm run server');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testAPI();
